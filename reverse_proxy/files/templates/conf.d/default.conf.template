# Nginx configuration for both HTTP and SSL
# Defaults values https://github.com/coreruleset/modsecurity-docker/blob/ef9432b6d2e08370a55879543f3f042c757c29c3/v3-nginx/Dockerfile


map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

map $request_uri $https_only {
  "~^/.well-known/acme-challenge/"  false;
  "~^/healthz$"      false;
  default           true;
}

server {
    listen ${PORT} default_server;

    server_name ${SERVER_NAME};

    include includes/location_acme.conf;

    set $always_redirect ${NGINX_ALWAYS_TLS_REDIRECT};

    if ($https_only = false) {
      set $always_redirect false;
    }

    if ($always_redirect = true) {
      return 301 https://$host$request_uri;
    }

    include locations/*.conf;
}

# Use map to allow starting reverse_proxy without SSL ssl_certificate
# This will allow certbot to create one and trigger reload
map $host $fullchain {
    default       /etc/nginx/ssl/live/${SERVER_NAME}/fullchain.pem;
}
map $host $privkey {
    default       /etc/nginx/ssl/live/${SERVER_NAME}/privkey.pem;
}

server {
    listen ${SSL_PORT} ssl;

    server_name ${SERVER_NAME};

    ssl_certificate $fullchain;
    ssl_certificate_key $privkey;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    ssl_dhparam /etc/ssl/certs/dhparam-${PROXY_SSL_DH_BITS}.pem;

    ssl_protocols ${PROXY_SSL_PROTOCOLS};
    ssl_ciphers ${PROXY_SSL_CIPHERS};
    ssl_prefer_server_ciphers ${PROXY_SSL_PREFER_CIPHERS};

    ssl_stapling ${PROXY_SSL_OCSP_STAPLING};
    ssl_stapling_verify ${PROXY_SSL_OCSP_STAPLING};

    ssl_verify_client ${PROXY_SSL_VERIFY};

    include includes/location_acme.conf;

    # Redirect to maintenance if maintenance.on file present & not maintenance ip

    set $maintenance false;

    if (-f /etc/nginx/html/maintenance.on) {
        set $maintenance true;
    }

    if ($maintenance_allowed_ips = 1) {
      set $maintenance false;
    }

    error_page 503 @maintenance;

    location @maintenance {
        rewrite ^(.*)$ /maintenance.html break;
        root /etc/nginx/html;
    }

    if ($maintenance = true) {
      return 503;
    }

    include includes/location_monitoring.conf;
    include locations/*.conf;
}